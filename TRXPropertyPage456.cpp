// TRXPropertyPage.cpp : fichier d'implémentation
//

#include "stdafx.h"
#include "TRXPropertyPage456.h"
// #include "afxdialogex.h"

#include "TRXCHEATWIN.h"
#include "TR8SaveGame.h"

//
/////////////////////////////////////////////////////////////////////////////
// DialogBox CTRXPropertyPage456
//
/////////////////////////////////////////////////////////////////////////////
IMPLEMENT_DYNAMIC(CTRXPropertyPage456, CTRXPropertyPageBase)

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTRXPropertyPage456::CTRXPropertyPage456( UINT code ) : CTRXPropertyPageBase(code)
{
    m_bModified         = FALSE;
    m_bApplyActive      = FALSE;

    m_SetManualCombo    = true;
    m_SetManualList     = true;

    m_pContextMenu      = NULL;
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTRXPropertyPage456::~CTRXPropertyPage456()
{
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTRXPropertyPage456::DoDataExchange(CDataExchange* pDX)
{
    CTRXPropertyPageBase::DoDataExchange(pDX);
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
BEGIN_MESSAGE_MAP(CTRXPropertyPage456, CTRXPropertyPageBase)
    ON_WM_SIZE()
    ON_WM_MOVE()
    ON_WM_TIMER()
END_MESSAGE_MAP()

//
/////////////////////////////////////////////////////////////////////////////
// Message Handlers CTRXPropertyPage456
//
//////////////////////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTRXPropertyPage456::OnSize(UINT nType, int cx, int cy)
{
    CTRXPropertyPageBase::OnSize(nType, cx, cy);

    //
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTRXPropertyPage456::OnMove(int x, int y)
{
    CTRXPropertyPageBase::OnMove(x, y);

    //
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTRXPropertyPage456::OnCancel()
{
    //

    CTRXPropertyPageBase::OnCancel();
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTRXPropertyPage456::OnOK()
{
    //

    CTRXPropertyPageBase::OnOK();
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
int CTRXPropertyPage456::GetValue ( CEdit &edit )
{
    //
    char szString [ 32 ];
    ZeroMemory ( szString, sizeof(szString) );
    edit.GetWindowText ( szString, sizeof(szString) );
    int result = 0;
    if ( strncmp ( szString, "0x", 2 ) == 0 )
    {
        sscanf_s ( szString + 2, "%x", &result );
    }
    else
    {
        result = atoi(szString);
    }

    return result;
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
int CTRXPropertyPage456::GetValue ( CButton &button )
{
    return button.GetCheck();
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
BOOL CTRXPropertyPage456::PreTranslateMessage(MSG* pMsg)
{
    //
    m_ToolTip.RelayEvent(pMsg);

    return CTRXPropertyPageBase::PreTranslateMessage(pMsg);
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
BOOL CTRXPropertyPage456::OnInitDialog()
{
    CTRXPropertyPageBase::OnInitDialog();

    //
    if ( ! m_bTimerInit )
    {
        //  Every Second
        InitTimerNotif ( NOTIF_TRR456 );

        m_bTimerInit = true;
    }

    //
    return TRUE;  // return TRUE unless you set the focus to a control
    // EXCEPTION : les pages de propriétés OCX devraient retourner FALSE
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void  CTRXPropertyPage456::SetGUIModified( BOOL bChanged )
{
    if ( CTR8SaveGame::I(FALSE) == NULL )
    {
        m_bModified = FALSE;
        return;
    }

    m_bModified = bChanged;
    if ( m_bApplyActive )
    {
        CTRXPropertyPageBase::SetModified ( bChanged );
    }
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
BOOL CTRXPropertyPage456::IsGUIModified()
{
    return m_bModified;
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTRXPropertyPage456::SetApply(BOOL bApply )
{
     m_bApplyActive = bApply;
}

//
/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTRXPropertyPage456::OnTimer(UINT_PTR nIDEvent)
{
    // TODO: add your code here
    if ( nIDEvent == TIMER_TRR456 )
    {
        HandleTimerNotif ( NOTIF_TRR456 );
    }

    CTRXPropertyPageBase::OnTimer(nIDEvent);
}

